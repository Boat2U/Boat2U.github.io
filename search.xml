<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>《天使爱美丽》</title>
    <url>/2023/05/04/amelia/</url>
    <content><![CDATA[<h1 id="《天使爱美丽》"><a href="#《天使爱美丽》" class="headerlink" title="《天使爱美丽》"></a>《天使爱美丽》</h1><h3 id="剧情简介"><a href="#剧情简介" class="headerlink" title="剧情简介"></a>剧情简介</h3><p>法国女孩艾米丽（奥黛丽·塔图饰）从来就没有享受过家庭的温暖，她的童年是在孤单与寂寞中度过的。父亲是一名医生，他几乎不拥抱艾米丽，除了给她做医疗检查之外，这样难得的接触让爱美丽心跳加速，于是父亲认定她有心脏病，不适合去学校，只能在家中学习。孤独的她只能任由想象力无拘无束地驰骋来打发日子，自己去发掘生活的趣味，比如到河边扔漂石块，把草莓套在十个指头上慢慢地嘬等等。她唯一的朋友是一条金鱼，而连它都郁闷到不停跳出鱼缸。母亲受不了她的尖声惊叫，决定把鱼放归到河中。一次艾米丽被邻居捉弄，她在他看足球赛时报复他，用电视机看着，每到进球的关键时刻拔掉天线，如此反复。八岁时，母亲被跳楼的游客砸死，神经质的父亲更加自闭，沉醉在自己的世界里。</p>
<p>长大后的艾米丽在巴黎的一家咖啡馆里做女侍应，在咖啡馆和她租住的小公寓的每一个人似乎都有些奇怪。艾米丽每周末搭地铁会去看父亲。在地铁站她邂逅了趴在地上够自助照相机柜下的碎照片的男人。</p>
<p>1997年夏天的一个事件改变了艾米丽的人生。那天新闻播报戴安娜王妃在一场车祸中身亡，而艾米丽手中的瓶盖掉到地上，撞上一块墙砖。艾米丽从里面掏出一只铁盒，装满了小男孩所钟爱的小玩物和许多照片。艾米丽于是决定要是能找到盒子的主人——半个世纪前这个公寓的房客，她就开始帮助所有的人。爱美丽开始寻找曾经的小男孩，她拜访并见识了各种各样的邻居，几乎走访了巴黎城中所有的“白度图”，最终在玻璃人老头的帮助下将盒子还回了主人。从此她开始了惩恶助善的天使生涯。在这过程中，艾米丽遇到许多不同的人物，如路上的盲人，二十年不出门的玻璃人老头，遭到丈夫背叛的女房东，悭吝凶恶的果蔬摊主，善良木讷的伙计，咖啡店古怪的客人和卖烟女，当然还有自己的父亲。 无意中艾米丽捡到了爱收集照片的尼诺（马修·卡索维茨饰）的一本相册集，里面是重新整合的碎照片。艾米丽知道这个就是自己想要的男人，也许自从看到他的第一眼就知道。她开始向她心中的爱人“施魔法”。</p>
<h3 id="视频解说"><a href="#视频解说" class="headerlink" title="视频解说"></a>视频解说</h3>
<div style="position: relative; width: 100%; height: 75%; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=16848845&bvid=BV1UW411a7Nj&cid=71618008&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>


<h3 id="片段剪辑"><a href="#片段剪辑" class="headerlink" title="片段剪辑"></a>片段剪辑</h3>
<div style="position: relative; width: 100%; height: 75%; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=96984902&bvid=BV117411Z7TT&cid=165570742&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>


<div id="gitalk-container"></div>
<script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script>

		<script>
		var gitalkConfig = {"enable":true,"clientID":"ea0363f556867f33c0b1","clientSecret":"b1beaa1d6a57ced3ce4f013db5d9f1c71f6aabd3","repo":"Boat2U.github.io","owner":"Boat2U","admin":["Boat2U"],"distractionFreeMode":true};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render("gitalk-container");
	    </script>]]></content>
      <categories>
        <category>film</category>
      </categories>
      <tags>
        <tag>film</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/05/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>

<div id="gitalk-container"></div>
<script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script>

		<script>
		var gitalkConfig = {"enable":true,"clientID":"ea0363f556867f33c0b1","clientSecret":"b1beaa1d6a57ced3ce4f013db5d9f1c71f6aabd3","repo":"Boat2U.github.io","owner":"Boat2U","admin":["Boat2U"],"distractionFreeMode":true};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render("gitalk-container");
	    </script>]]></content>
  </entry>
  <entry>
    <title>总结和反思</title>
    <url>/2023/05/04/summary/</url>
    <content><![CDATA[<h1 id="总结和反思"><a href="#总结和反思" class="headerlink" title="总结和反思"></a>总结和反思</h1><h2 id="一、关于博客的主题"><a href="#一、关于博客的主题" class="headerlink" title="一、关于博客的主题"></a>一、关于博客的主题</h2><p>这次使用Github + Hexo搭建了一个简单的个人静态博客, 之所以选择Hexo是有以下几个原因：</p>
<ul>
<li>环境的配置相对来说十分简单，只需要安装Git和Nodejs即可 <del>恰好这两个都有现成的</del></li>
<li>官方文档十分友好, 页面简洁, 清晰简单, 详见<a href="https://hexo.io/zh-cn/docs/index.html">https://hexo.io/zh-cn/docs/index.html</a></li>
<li>使用十分灵活简便, 支持强大的主题和插件系统</li>
</ul>
<h2 id="二、页面设计"><a href="#二、页面设计" class="headerlink" title="二、页面设计"></a>二、页面设计</h2><p>这次采用的主题是Fluid</p>
<p>Fluid是基于Hexo的一款Material Design风格的主题，它有着优雅的颜值，使用Material Design风格突出层次感，但又不失简约，让用户能专注于写作；同时提供大量定制化配置项，使每个用户使用该主题都能具有独特的样式，能够适配手机、平板等设备，包括极端的分辨率都能轻松应对；并且主题中少有的整合了 LaTeX 和 mermaid 的支持。</p>
<h2 id="三、功能实现及技术选择"><a href="#三、功能实现及技术选择" class="headerlink" title="三、功能实现及技术选择"></a>三、功能实现及技术选择</h2><h3 id="使用Hexo-Admin插件"><a href="#使用Hexo-Admin插件" class="headerlink" title="使用Hexo Admin插件"></a>使用Hexo Admin插件</h3><p>Hexo Admin 是一个本地在线式文章管理器，可以用直观可视化的方式新建、编辑博客文章、page页面，添加标签、分类等，并且支持剪贴板粘贴图片（自动在source_images_目录中创建文件）,使用方便, 非常适合新手</p>
<blockquote>
<p>安装命令: npm install –save hexo-admin<br>启动服务后访问地址: <a href="http://localhost:4000/admin">http://localhost:4000/admin</a></p>
</blockquote>
<p><img src="/images/admin.jpg" alt="插件使用界面"></p>
<h3 id="使用Gitalk实现评论功能"><a href="#使用Gitalk实现评论功能" class="headerlink" title="使用Gitalk实现评论功能"></a>使用Gitalk实现评论功能</h3><p>安装命令</p>
<blockquote>
<p>npm install hexo-plugin-gitalk –save<br><img src="/images/comment.jpg" alt="评论成功"></p>
</blockquote>
<h2 id="四、样式设计"><a href="#四、样式设计" class="headerlink" title="四、样式设计"></a>四、样式设计</h2><p>由于Fluid本身主题足够简约大方，导览也很方便，所以并没有做太多的修改</p>
<p>需要注意的一个点是在md文件中可以通过以下方式来手动截断让首页更加干净简约<br><img src="/images/cut.png" alt="手动截断"><br><img src="/images/cutshow.png" alt="成功截断"></p>
<h2 id="五、问题及解决方法"><a href="#五、问题及解决方法" class="headerlink" title="五、问题及解决方法"></a>五、问题及解决方法</h2><h3 id="1-hexo-new新建文件失败"><a href="#1-hexo-new新建文件失败" class="headerlink" title="1. hexo new新建文件失败"></a>1. hexo new新建文件失败</h3><p><img src="/images/question1.jpg" alt="问题描述"><br>修改_config.yml<br><img src="/images/solution1.jpg" alt="解决办法"><br><img src="/images/acc1.jpg" alt="正确显示"></p>
<h3 id="2-上传文件到github时上传到了master-而不是默认分支main"><a href="#2-上传文件到github时上传到了master-而不是默认分支main" class="headerlink" title="2. 上传文件到github时上传到了master, 而不是默认分支main"></a>2. 上传文件到github时上传到了master, 而不是默认分支main</h3><p>修改_config.yml，设置的是部署到main分支（我的默认分支），所以将branch设置为main<br><img src="/images/solution2.jpg" alt="修改branch为main，注意加冒号"></p>
<h3 id="3-出现评论界面但无法评论"><a href="#3-出现评论界面但无法评论" class="headerlink" title="3 出现评论界面但无法评论"></a>3 出现评论界面但无法评论</h3><p>问题描述如下：<br><img src="/images/pasted-11.png" alt="无法评论"></p>
<p>解决办法：<br>需要建一个仓库专门储存评论（可以直接在Boat2U.github.io中的issues存储评论）,该仓库需要初始化创建一个issue，并且新增一个label名为“Gitalk”<br><img src="/images/pasted-14.png" alt="创建完Gitalk标签后，所有的评论都会在该标签下"><br>并且settings - Developer Settings - OAuth Apps下要填入正确的域名<br><img src="/images/pasted-13.png" alt="正确复制域名"></p>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>简单学习了Github + Hexo的使用，搭建了一个简陋的个人静态博客</p>

<div id="gitalk-container"></div>
<script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script>

		<script>
		var gitalkConfig = {"enable":true,"clientID":"ea0363f556867f33c0b1","clientSecret":"b1beaa1d6a57ced3ce4f013db5d9f1c71f6aabd3","repo":"Boat2U.github.io","owner":"Boat2U","admin":["Boat2U"],"distractionFreeMode":true};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render("gitalk-container");
	    </script>]]></content>
      <categories>
        <category>summary</category>
      </categories>
      <tags>
        <tag>summary</tag>
      </tags>
  </entry>
  <entry>
    <title>总结和反思</title>
    <url>/2023/07/13/summer_camp/</url>
    <content><![CDATA[<h1 id="暑期夏令营实践项目的总结与反思"><a href="#暑期夏令营实践项目的总结与反思" class="headerlink" title="暑期夏令营实践项目的总结与反思"></a>暑期夏令营实践项目的总结与反思</h1><h2 id="一、关于博客的主题"><a href="#一、关于博客的主题" class="headerlink" title="一、关于博客的主题"></a>一、关于博客的主题</h2><p>之前已经利用 Github + Hexo搭建了一个简单的个人静态博客，当时选取的主题是 Fluid，因为感觉Hexo上手很方便，所以这次项目只想换个主题改进一下，最终选定了主题 matery，主要是考虑到以下几点：</p>
<ol>
<li>简单漂亮，butterfly 设计</li>
<li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li>
<li>首页轮播文章及每天动态切换 Banner 图片，瀑布流式的博客文章列表</li>
<li>时间轴式的归档页，丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li>
<li>支持文章置顶、文章打赏、Gitalk 评论模块和首页的音乐播放和视频播放功能</li>
</ol>
<h2 id="二、页面设计"><a href="#二、页面设计" class="headerlink" title="二、页面设计"></a>二、页面设计</h2><p>该博客包含五个页面，分别是“首页”、“标签”、“分类”、“归档”和“关于”，</p>
<p><strong>导航栏</strong></p>
<p>支持搜索功能和切换夜间模式</p>
<p><img src="/images/matery/navigation.png" alt="导航栏"></p>
<p><strong>首页</strong></p>
<p>支持音乐播放功能<br><img src="/images/matery/index.png" alt="首页"></p>
<p>下滑可以看到推荐文章和瀑布流式的博客文章列表</p>
<p><img src="/images/matery/index_1.png" alt="推荐文章"></p>
<p><img src="/images/matery/index_2.png" alt="博客文章列表"></p>
<p><strong>标签页</strong></p>
<p>标签页采用了maetry主题的默认设置，采用了词云的设计</p>
<p><img src="/images/matery/tags.png" alt="标签页"></p>
<p><strong>分类页</strong></p>
<p><img src="/images/matery/categories.png" alt="分类页"></p>
<p><strong>归档页</strong></p>
<p><img src="/images/matery/archieves.png" alt="归档页"></p>
<p><strong>关于页</strong></p>
<p><img src="/images/matery/about.png" alt="关于我"></p>
<p><img src="/images/matery/about_1.png" alt="我的项目和我的相册"></p>
<h2 id="三、功能实现"><a href="#三、功能实现" class="headerlink" title="三、功能实现"></a>三、功能实现</h2><p><strong>评论功能</strong></p>
<p>这次项目依然沿用了之前的 Gitalk 插件实现评论</p>
<p>安装命令：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-plugin-gitalk –save
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/matery/comment.png" alt="评论"></p>
<p><strong>搜索功能</strong></p>
<p>需要安装hexo-generator-search插件，支持对文章标题和文章内容的搜索</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/matery/search.png" alt="搜索"></p>
<p><strong>文章字数统计</strong></p>
<p>需要安装 hexo-wordcount 插件</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/images/matery/wordcount.png" alt="阅读统计"></p>
<p><strong>代码块高亮</strong></p>
<p>安装 hexo-prism-plugin 插件</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="四、样式设计"><a href="#四、样式设计" class="headerlink" title="四、样式设计"></a>四、样式设计</h2><p>设置 matery 根目录下的 _config.yml 文件的 postInfo，展示文章更详细的信息</p>
<pre class="line-numbers language-bash"><code class="language-bash">postInfo:
  date: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 发布日期</span>
  update: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 更新日期</span>
  wordCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章字数统计</span>
  totalCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 站点总文章字数</span>
  min2read: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章阅读时长</span>
  readCount: <span class="token boolean">true</span> <span class="token comment" spellcheck="true"># 文章阅读次数</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/matery/wordcount_1.png" alt="文章信息"></p>
<p>重要文章开启置顶功能，在博客的md文件前面设置 <code>top: true</code>，首页可以看到推荐文章</p>
<p><img src="/images/matery/index_1.png" alt="置顶文章"></p>
<p>同时设置 <code>summary: 摘要内容</code> 在首页只显示内容摘要</p>
<p><img src="/images/matery/summary.png" alt="显示内容摘要"></p>
<h2 id="五、问题及解决方法"><a href="#五、问题及解决方法" class="headerlink" title="五、问题及解决方法"></a>五、问题及解决方法</h2><p>因为这次项目是在之前的博客上进行改进，有些坑已经踩过了，所以没有遇到太多的问题，关于之前实验遇到的问题可以参考<a href="https://boat2u.github.io/2023/05/04/summary/">博客</a></p>
<p>需要注意的是，之前虽然设置过评论功能，由于更换了一个主题，gitalk 相关设置也需要在 matery 根目录的 _config.yml 中配置好：</p>
<pre class="line-numbers language-bash"><code class="language-bash">gitalk:
  enable: <span class="token boolean">true</span>
  owner: Boat2U
  repo: Boat2U.github.io
  oauth:
    clientID: ea0363f556867f33c0b1
    clientSecret: b1beaa1d6a57ced3ce4f013db5d9f1c71f6aabd3
  admin: 
    - Boat2U
  distractionFreeMode: <span class="token boolean">true</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这次实验主要遇到的问题只有<strong>代码高亮显示</strong>：</p>
<p>hexo 的默认代码高亮显示阅读观感很差，因此我安装了 hexo-prism-plugin 插件，但是安装设置完后并未奏效，主要原因是 hexo 根目录下的 _config.yml 中 highlight 部分要设置 <code>enable: false  # 关闭原有的代码高亮</code>，同时新增的代码高亮插件中要设置 <code>enable: true</code>：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 添加prism_plugin配置项</span>
prism_plugin:
  enable: <span class="token boolean">true</span>
  preprocess: <span class="token boolean">true</span>
  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>
  theme: <span class="token string">'tomorrow'</span>
  line_number: <span class="token boolean">true</span>    <span class="token comment" spellcheck="true"># default false</span>
  custom_css: 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/images/matery/highlight.png" alt="代码高亮默认设置"></p>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p>本次用 Hexo+github pages 搭建了一个简易个人博客，在原来的实验作业中做出了进一步的更改，更加熟悉了相关操作，是很有意义的一次经历。</p>

<div id="gitalk-container"></div>
<script src="https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js"></script><link rel="stylesheet" href="https://unpkg.com/gitalk/dist/gitalk.css"><script src="https://unpkg.com/gitalk/dist/gitalk.min.js"></script>

		<script>
		var gitalkConfig = {"enable":true,"clientID":"ea0363f556867f33c0b1","clientSecret":"b1beaa1d6a57ced3ce4f013db5d9f1c71f6aabd3","repo":"Boat2U.github.io","owner":"Boat2U","admin":["Boat2U"],"distractionFreeMode":true};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render("gitalk-container");
	    </script>]]></content>
      <categories>
        <category>summary</category>
      </categories>
      <tags>
        <tag>summary</tag>
      </tags>
  </entry>
</search>
